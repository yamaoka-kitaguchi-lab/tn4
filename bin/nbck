#!/usr/bin/env python3

"""

NBCK - NetBox Consistency Check

NBCK is a command-line utility to check and repair NetBox registration errors.
This makes sure NetBox for integrity and consistency just like the fsck command does for Linux filesystem.

$ PATH=$HOME/tn4-player/bin:$PATH
$ nbck --full-check --force-repair

Since: March 2022
See: https://github.com/yamaoka-kitaguchi-lab/tn4-player

"""

import click
from rich.console import Console
from time import sleep


class NBCK:
    def __init__(self) -> None:
        self.console = Console()
        self.master_slave_tag_problems = None
        self.wifi_tag_problems = None

    def load_inventories(self, verbose=False) -> None:
        with self.console.status("[bold]Fetching the latest inventories from NetBox (netbox.m.noc.titech.ac.jp)..."):
            sleep(1)  # VLAN fetch
            self.console.log("Fetched all VLANs")
            sleep(1)  # IP Address fetch
            self.console.log("Fetched all IP Addresses")
            sleep(1)  # Device fetch
            self.console.log("Fetched all Devices")
            sleep(1)  # Interface fetch
            self.console.log("Fetched all Interfaces")


    def full_check(self, verbose=False) -> None:
        with self.console.status("[bold]Finding broken consistency..."):
            self.__check_master_slave_tag_consistency()
            self.__check_wifi_tag_consistency()
            sleep(1)  # dummy

            n_probs, n_prob_infs, n_prob_hosts = 102, 100, 10
            self.console.log(f"Found {n_probs} problems on {n_prob_infs} interfaces on {n_prob_hosts} hosts")


    def full_repair(self, skip_confirm=False, verbose=False) -> None:
        with self.console.status("[bold]Repairing broken master/slave tag consistency..."):
            sleep(1)  # repairing
            self.console.log("Repaired")

        with self.console.status("[bold]Repairing broken Wi-Fi tag consistency..."):
            sleep(1)  # repairing
            self.console.log("Repaired")


    def __check_master_slave_tag_consistency(self) -> None:
        pass


    def __check_wifi_tag_consistency(self) -> None:
        pass


@click.command(help="A command-line utility to check and repair NetBox integrity and consistency")
@click.option("--force-repair", "flg_force_repair", is_flag=True, default=False, help="Repair all inconsistencies without confirmation")
@click.option("--verbose", "flg_verbose", is_flag=True, default=False, help="Show defailed logging")
def main(flg_force_repair, flg_verbose):
    nbck = NBCK()
    nbck.load_inventories(verbose=flg_verbose)
    nbck.full_check(verbose=flg_verbose)
    nbck.full_repair(skip_confirm=flg_force_repair, verbose=flg_verbose)


if __name__ == "__main__":
    main()
